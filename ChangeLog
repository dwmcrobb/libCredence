2024-09-30  Daniel McRobb  <dwm@thrip.mcplex.net>

	* classes/include/DwmCredencePeer.hh,
	  classes/include/DwmCredenceXChaCha20Poly1305InBuffer.hh,
	  classes/include/DwmCredenceXChaCha20Poly1305Istream.hh,
	  classes/src/DwmCredenceAuthenticator.cc,
	  classes/src/DwmCredenceXChaCha20Poly1305InBuffer.cc:
	More tweaks to syslogging, especially we see EOF from remote
	endpoint.

	* tagged as libDwmCredence-0.1.38

	* classes/src/DwmCredenceXChaCha20Poly1305InBuffer.cc: Minor
	changes for more sensible syslogging when we lose connection
	(usually due to remote end closing the socket).

2024-09-28  Daniel McRobb  <dwm@thrip.mcplex.net>

	* tagged as libDwmCredence-0.1.37

	* classes/include/DwmCredenceKnownKeys.hh,
	  classes/src/DwmCredenceKnownKeys.cc:
	Added copy assignment operator.

2024-09-27  Daniel McRobb  <dwm@thrip.mcplex.net>

	* tagged as libDwmCredence-0.1.36

	* classes/src/DwmCredenceKnownKeys.cc: Don't reload keys in
	copy constructor, just copy them after obtaining shared lock
	on source.

2024-09-27  Daniel W. McRobb  <dwm@spark.mcplex.net>

	* tagged as libDwmCredence-0.1.35

	* classes/src/DwmCredenceKnownKeys.cc: syslog the number of keys
	loaded.

	* tagged as libDwmCredence-0.1.34

2024-09-26  Daniel W. McRobb  <dwm@spark.mcplex.net>

	* classes/include/DwmCredenceKnownKeys.hh,
	  classes/src/DwmCredenceKnownKeys.cc:
	Added ability to reload keys.  To make threadsafe, Keys() now
	returns a copy instead of a reference and we use a shared_mutex
	to provide mutual exclusion.

2024-08-16  Daniel McRobb  <dwm@toto.mcplex.net>

	* tagged as libDwmCredence-0.1.33

2024-08-16  Daniel W. McRobb  <dwm@spark.mcplex.net>

	* src/DwmCredenceAuthenticator.cc,
	src/DwmCredenceChallengeResponse.cc,
	src/DwmCredenceKeyExchanger.cc,
	src/DwmCredenceShortString.cc,
	src/DwmCredenceSigner.cc,
	src/DwmCredenceUtils.cc,
	src/DwmCredenceXChaCha20Poly1305InBuffer.cc: Use FSyslog()
	in place of Syslog() when there are parameters to be
	formatted.

	* classes/include/DwmCredencePeer.hh: Added 'requires
	IsStreamWritable<T>' to Send(const T &) and 'requires
	IsStreamReadable<T>' to Receive(T &).  Also use FSyslog()
	in place of Syslog() when there are parameters to be
	formatted.

2024-07-26  Daniel McRobb  <dwm@thrip.mcplex.net>

	* tagged as libDwmCredence-0.1.32

2024-07-26  Daniel W. McRobb  <dwm@spark.mcplex.net>

	* README.md: Updates.

2024-07-23  Daniel W. McRobb  <dwm@spark.mcplex.net>

	* classes/include/DwmCredenceAuthenticator.hh,
          classes/include/DwmCredenceChallenge.hh,
          classes/include/DwmCredenceChallengeResponse.hh,
          classes/include/DwmCredenceNonce.hh,
          classes/include/DwmCredencePeer.hh,
          classes/include/DwmCredenceShortString.hh,
          classes/src/DwmCredenceAuthenticator.cc:
	No longer need to inherit from StreamIOCapable; use concepts instead.

	* Added README.md

2024-07-16  Daniel W. McRobb  <dwm@spark.mcplex.net>

	* tagged as libDwmCredence-0.1.31

	* classes/include/DwmCredencePeer.hh: Tweak documentation comments.

2024-06-01  Daniel W. McRobb  <dwm@kiva.mcplex.net>

	* tagged as libDwmCredence-0.1.30

	* Makefile, apps/Makefile, apps/credence/Makefile: Fix up
	'distclean' target.

2024-05-30  dwm  <dwm@nomnom.mcplex.net>

	* tagged as libDwmCredence-0.1.29

2024-05-29  dwm  <dwm@ria.mcplex.net>

	* classes/src/DwmCredenceUtils.cc:
	Replace use of variable-length arrays since it's a clang extension
	(though part of C99, it's not standard C++).

2024-03-17  dwm  <dwm@ria.mcplex.net>

	* tagged as libDwmCredence-0.1.28

	* classes/src/DwmCredencePeer.cc: Change deprecated
	expires_from_now() to expires_after().  In Connect(), reset the
	expiration timeout to 60 seconds after we connect.

2023-12-29  Daniel McRobb  <dwm@spark.mcplex.net>

	* tagged as libDwmCredence-0.1.27

2023-12-29  dwm  <dwm@nomnom.mcplex.net>

	* configure, configure.ac, dwm.m4: clean up some old cruft just
	to speed up configure.

2023-12-29  Daniel W. McRobb  <dwm@kiva.mcplex.net>

	* tagged as libDwmCredence-0.1.26

2023-12-29  dwm  <dwm@nomnom.mcplex.net>

	* classes/Makefile, classes/include/Makefile,
	classes/tests/Makefile: fix 'distclean' target.

2023-12-29  Daniel McRobb  <dwm@spark.mcplex.net>

	* tagged as libDwmCredence-0.1.25

	* dwm.m4, configure.ac, configure: Add and use new
	DWM_REQUIRES_DWMPKG macro.

2023-12-28  Daniel McRobb  <dwm@thrip.mcplex.net>

	* tagged as libDwmCredence-0.1.24

	* classes/src/DwmCredencePeer.cc: Tweak EndPointString() so we can
	still use it after stream is closed.

2023-12-19  Daniel W. McRobb  <dwm@depot.mcplex.net>

	* tagged as libDwmCredence-0.1.23

2023-12-16  Daniel McRobb  <dwm@spark.mcplex.net>

	* classes/include/DwmCredenceAuthenticator.hh,
	classes/include/DwmCredenceKeyExchanger.hh,
	classes/include/DwmCredencePeer.hh,
	classes/include/DwmCredenceUtils.hh,
	classes/src/DwmCredenceAuthenticator.cc,
	classes/src/DwmCredenceKeyExchanger.cc,
	classes/src/DwmCredencePeer.cc, classes/src/DwmCredenceUtils.cc,
	classes/tests/TestChallenge.cc, classes/tests/TestPeer.cc,
	configure, configure.ac:

	Added support for boost::asio::local::stream_protocol::socket.
	Not ideal at the moment since I duplicated the streams, but it
	works.  Requires C++20 due to libDwm now requiring it.

2023-10-27  Daniel McRobb  <dwm@spark.mcplex.net>

	* tagged as libDwmCredence-0.1.22

	* Makefile: use correct identifier when building package on macOS:
	net.mcplex.libDwmCredence

2023-10-24  Daniel McRobb  <dwm@spark.mcplex.net>

	* tagged as libDwmCredence-0.1.21

	* classes/src/DwmCredenceServerConfigParse.y:
	Type of second argument to credenceservercfg_scan_bytes() is
	different for different versions of flex. :-(  Update all of
	my hosts to at least flex 2.6.4 so I have consistent 'int'
	as second argument type.

2023-10-24  Daniel McRobb  <dwm@spark.mcplex.net>

	* tagged as libDwmCredence-0.1.20

	* Added classes/src/DwmCredenceServerConfigLex.lex and
	DwmCredenceServerConfigParse.y

2023-10-23  Daniel McRobb  <dwm@spark.mcplex.net>

	* tagged as libDwmCredence-0.1.19

	* Deal with boost moving in recent MacPorts for Sonoma, and
	slightly modernize my autoconf (the parts I am using here).

2023-08-01  Daniel McRobb  <dwm@mcplex.net>

	* tagged as libDwmCredence-0.1.18

	* Minor tweaks to improve robustness against faulty clients.

2023-07-16  Daniel W. McRobb  <dwm@mcplex.net>

	* classes/tests/TestPeer.cc: Added check of Peer::ReceiveWouuldBlock().

	* tagged as libDwmCredence-0.1.17

	* classes/include/DwmCredencePeer.hh, classes/src/DwmCredencePeer.cc:
	Added Peer::ReceiveWouldBlock(size_t numBytes)

2023-06-24  Daniel McRobb  <dwm@mcplex.net>

	* tagged as libDwmCredence-0.1.16

	* classes/include/DwmCredencePeer.hh, classes/src/DwmCredencePeer.cc:
	Added defaulted timeOut paramater to Peer::Connect().

2023-01-14  Daniel McRobb  <dwm@mcplex.net>

	* Tagged as libDwmCredence-0.1.15

	* classes/src/DwmCredenceXChaCha20Poly1305.cc: Log exception what()
	if we catch a atd::exception.

2023-01-13  dwm  <dwmcrobb@me.com>

	* Tagged as libDwmCredence-0.1.13

	* classes/src/DwmCredenceXChaCha20Poly1305.cc: Don't put our write
	buffers on the stack.  We might have very large messages to
	encrypt/decrypt and hence using the heap is more appropriate.
	We're passed a string reference for output; just resize() it and
	populate it.  Catch exceptions sinze resize() can throw.

	* DwmCredenceKeyExchanger.cc: Add GetSetSocketNoDelayOption()
	function, currently unused.

